CREATE OR REPLACE PROCEDURE UPDATE_TAX_LIMIT(TAX_RATE IN NUMBER)
AS
 L_ELIGIBLE BOOLEAN;
 TYPE ORDERID_TYPE IS TABLE OF SALES.ORDER_ID%TYPE INDEX BY PLS_INTEGER; --Associative Array
 
 L_ORDER_IDS ORDERID_TYPE; --Initialize
 L_ELIGIBLE_ORDERS ORDERID_TYPE; --Initialize
 CURSOR SALES_CURSOR IS SELECT DISTINCT order_id FROM SALES; --Declare SALES_CURSOR variable
 
BEGIN

 OPEN SALES_CURSOR;
 
 LOOP 
  FETCH SALES_CURSOR BULK COLLECT INTO L_ORDER_IDS LIMIT 100; --BULK COLLECT the ORDER_ID's 100 at a time into a collection
    FOR indx IN 1..L_ORDER_IDS.COUNT
     LOOP   
      CHECK_ELIGIBLE(L_ORDER_IDS(indx),L_ELIGIBLE);
      
      IF L_ELIGIBLE THEN
       L_ELIGIBLE_ORDERS(L_ELIGIBLE_ORDERS.COUNT + 1) := L_ORDER_IDS(indx); 
      END IF;  
     END LOOP;
     
    EXIT WHEN L_ORDER_IDS.COUNT = 0;
    
  END LOOP;
  
  FORALL idx IN 1..L_ELIGIBLE_ORDERS.COUNT
     UPDATE SALES S
     SET 
        S.TAX_AMOUNT = S.TOTAL_AMOUNT * TAX_RATE
     WHERE 
        S.ORDER_ID = L_ELIGIBLE_ORDERS(idx);
     
     COMMIT;
     
  CLOSE SALES_CURSOR;
  
END UPDATE_TAX_LIMIT;

